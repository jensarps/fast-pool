/*
 fastPool - A lightweight and fast object pool implementation

 Version 0.9.0

 Copyright (c) 2016 Jens Arps
 http://jensarps.de/

 Licensed under the MIT license
*/
(function(c,b,a){"function"===typeof define?define(b):"undefined"!==typeof module&&module.exports?module.exports=b():a[c]=b()})("fastPool",function(){var c=function(a){this.createObject=a.createObject;this.resetObject=a.resetObject;this.preAllocate(a.preAllocate)};c.prototype={constructor:c,createObject:null,resetObject:null,_pool:[],preAllocate:function(a){for(;a--;)this._pool.push(this.createObject())},transfer:function(){var a=this._pool;return a.length?a.pop():this.createObject()},takeBack:function(a){this.resetObject&&
this.resetObject(a);this._pool.push(a)},ensureSize:function(a){a-=this._pool.length;0<a&&this.preAllocate(a)}};var b={};return function(a){if(!a||!a.name)throw Error("fastPool: No `name` property given.");if(!a.ctor&&!a.createObject)throw Error("fastPool: Neither `ctor` nor `createObject` property given.");a.preAllocate=a.preAllocate||0;var d=b[a.name];if("undefined"!==typeof d)return d.ensureSize(a.preAllocate),d;a.createObject=a.createObject||function(){return new a.ctor};return d=b[a.name]=new c(a)}},
this);
